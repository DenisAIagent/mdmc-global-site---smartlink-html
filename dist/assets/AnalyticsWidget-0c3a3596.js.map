{"version":3,"file":"AnalyticsWidget-0c3a3596.js","sources":["../../src/dashboard/widgets/AnalyticsWidget.jsx"],"sourcesContent":["// src/dashboard/widgets/AnalyticsWidget.jsx\nimport React from 'react';\nimport {\n  Paper,\n  Typography,\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Avatar,\n  Stack,\n  Chip,\n  LinearProgress,\n  useTheme\n} from '@mui/material';\nimport {\n  TrendingUp,\n  Group,\n  Link as LinkIcon,\n  Visibility,\n  ArrowUpward,\n  ArrowDownward\n} from '@mui/icons-material';\nimport { useSmartLinkMetrics } from '../hooks/useSmartLinkMetrics';\n\n// Composant pour une métrique individuelle\nconst MetricCard = ({ \n  title, \n  value, \n  change, \n  changeType, \n  icon, \n  color,\n  loading = false \n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <Card sx={{ height: '100%', minHeight: 120 }}>\n        <CardContent>\n          <LinearProgress />\n          <Typography variant=\"body2\" sx={{ mt: 2 }}>\n            Chargement...\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      sx={{\n        height: '100%',\n        minHeight: 120,\n        background: `linear-gradient(135deg, ${color}08 0%, ${color}03 100%)`,\n        border: `1px solid ${color}20`,\n        position: 'relative',\n        overflow: 'hidden',\n        transition: 'all 0.3s ease',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          height: '3px',\n          background: color,\n        },\n        '&:hover': {\n          transform: 'translateY(-2px)',\n          boxShadow: `0 8px 16px ${color}20`,\n        },\n      }}\n    >\n      <CardContent sx={{ p: 2 }}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Box sx={{ flex: 1 }}>\n            <Typography \n              variant=\"body2\" \n              color=\"text.secondary\" \n              sx={{ fontWeight: 500, mb: 1 }}\n            >\n              {title}\n            </Typography>\n            <Typography \n              variant=\"h5\" \n              sx={{ \n                fontWeight: 700, \n                color: 'text.primary',\n                mb: 1\n              }}\n            >\n              {typeof value === 'number' ? value.toLocaleString() : value}\n            </Typography>\n            \n            {change && (\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n                {changeType === 'positive' ? (\n                  <ArrowUpward sx={{ color: theme.palette.success.main, fontSize: 16 }} />\n                ) : (\n                  <ArrowDownward sx={{ color: theme.palette.error.main, fontSize: 16 }} />\n                )}\n                <Typography\n                  variant=\"body2\"\n                  sx={{\n                    color: changeType === 'positive' \n                      ? theme.palette.success.main \n                      : theme.palette.error.main,\n                    fontWeight: 600,\n                  }}\n                >\n                  {change}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  vs mois dernier\n                </Typography>\n              </Stack>\n            )}\n          </Box>\n\n          <Avatar\n            sx={{\n              bgcolor: color,\n              width: 40,\n              height: 40,\n              boxShadow: `0 4px 8px ${color}30`,\n            }}\n          >\n            {icon}\n          </Avatar>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Widget principal d'analytics\nconst AnalyticsWidget = ({ \n  variant = 'overview',\n  widgetId,\n  isEditing = false,\n  title = 'Analytics Overview'\n}) => {\n  const theme = useTheme();\n  const { data, isLoading, error } = useSmartLinkMetrics();\n\n  // Définir les métriques selon la variante\n  const getMetrics = () => {\n    if (!data) return [];\n\n    const { stats } = data;\n    \n    const baseMetrics = [\n      {\n        title: 'Total SmartLinks',\n        value: stats.totalSmartLinks.value,\n        change: stats.totalSmartLinks.change,\n        changeType: stats.totalSmartLinks.changeType,\n        icon: <LinkIcon fontSize=\"small\" />,\n        color: theme.palette.primary.main,\n      },\n      {\n        title: 'Artistes Actifs',\n        value: stats.activeArtists.value,\n        change: stats.activeArtists.change,\n        changeType: stats.activeArtists.changeType,\n        icon: <Group fontSize=\"small\" />,\n        color: theme.palette.secondary.main,\n      },\n      {\n        title: 'Vues ce mois',\n        value: stats.monthlyViews.value,\n        change: stats.monthlyViews.change,\n        changeType: stats.monthlyViews.changeType,\n        icon: <Visibility fontSize=\"small\" />,\n        color: theme.palette.success.main,\n      },\n      {\n        title: 'Clics totaux',\n        value: stats.totalClicks.value,\n        change: stats.totalClicks.change,\n        changeType: stats.totalClicks.changeType,\n        icon: <TrendingUp fontSize=\"small\" />,\n        color: theme.palette.warning.main,\n      },\n    ];\n\n    return variant === 'compact' ? baseMetrics.slice(0, 2) : baseMetrics;\n  };\n\n  const metrics = getMetrics();\n\n  if (error) {\n    return (\n      <Paper sx={{ p: 2, height: '100%', minHeight: 200 }}>\n        <Typography color=\"error\" variant=\"body2\">\n          Erreur de chargement des métriques\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper \n      sx={{ \n        p: 2, \n        height: '100%',\n        minHeight: variant === 'compact' ? 150 : 200,\n        ...(isEditing && {\n          cursor: 'move',\n          '&:hover': { bgcolor: 'action.hover' }\n        })\n      }}\n    >\n      {/* Header du widget */}\n      <Stack \n        direction=\"row\" \n        justifyContent=\"space-between\" \n        alignItems=\"center\"\n        sx={{ mb: 2 }}\n      >\n        <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n          {title}\n        </Typography>\n        \n        {data?.enriched?.trends?.overallTrend && (\n          <Chip\n            label={\n              data.enriched.trends.overallTrend === 'excellent' ? 'Excellent' :\n              data.enriched.trends.overallTrend === 'good' ? 'Bon' :\n              data.enriched.trends.overallTrend === 'stable' ? 'Stable' :\n              'En baisse'\n            }\n            size=\"small\"\n            color={\n              data.enriched.trends.overallTrend === 'excellent' ? 'success' :\n              data.enriched.trends.overallTrend === 'good' ? 'primary' :\n              data.enriched.trends.overallTrend === 'stable' ? 'default' :\n              'error'\n            }\n            variant=\"outlined\"\n          />\n        )}\n      </Stack>\n\n      {/* Grille des métriques */}\n      <Grid container spacing={2}>\n        {metrics.map((metric, index) => (\n          <Grid \n            item \n            xs={variant === 'compact' ? 6 : 12}\n            sm={variant === 'compact' ? 6 : 6}\n            md={variant === 'compact' ? 6 : 6}\n            lg={variant === 'compact' ? 6 : 3}\n            key={metric.title}\n          >\n            <MetricCard \n              {...metric} \n              loading={isLoading}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Informations supplémentaires pour variant overview */}\n      {variant === 'overview' && data?.enriched && (\n        <Box sx={{ mt: 2, pt: 2, borderTop: 1, borderColor: 'divider' }}>\n          <Stack direction=\"row\" spacing={2} flexWrap=\"wrap\">\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Performance Score: {data.enriched.performance.performanceScore}/100\n            </Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Taux de conversion: {data.enriched.performance.conversionRate}%\n            </Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Niveau: {\n                data.enriched.performance.performanceLevel === 'excellent' ? 'Excellent' :\n                data.enriched.performance.performanceLevel === 'good' ? 'Bon' :\n                data.enriched.performance.performanceLevel === 'average' ? 'Moyen' :\n                'Faible'\n              }\n            </Typography>\n          </Stack>\n        </Box>\n      )}\n\n      {/* Debug info en développement */}\n      {process.env.NODE_ENV === 'development' && (\n        <Typography \n          variant=\"caption\" \n          sx={{ \n            position: 'absolute', \n            bottom: 4, \n            right: 8, \n            opacity: 0.5 \n          }}\n        >\n          {widgetId} | {variant}\n        </Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default AnalyticsWidget;"],"names":["MetricCard","title","value","change","changeType","icon","color","loading","theme","useTheme","jsx","Card","jsxs","CardContent","LinearProgress","Typography","Stack","Box","ArrowUpward","ArrowDownward","Avatar","AnalyticsWidget","variant","widgetId","isEditing","data","isLoading","error","useSmartLinkMetrics","metrics","stats","baseMetrics","LinkIcon","Group","Visibility","TrendingUp","Paper","_b","_a","Chip","Grid","metric","index"],"mappings":"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"}